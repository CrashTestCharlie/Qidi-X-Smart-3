## ===========================================================================
# Named macros
##

[gcode_macro beep_on]
Description: Enable sound
gcode:
    SET_PIN PIN=sound VALUE=1

[gcode_macro beep_off]
Description: Disable sound
gcode:
    SET_PIN PIN=sound VALUE=0

[gcode_macro BEEP]
Description: Activate the beeper
# Parameters
#   In   Iterations (number of times to beep).
#   DURnnn Duration/wait of each beep in ms. Default 100ms.
gcode:
    {% set count = params.I | default(1) | int %}
    {% set length = params.DUR | default(100) | int %}

    {% if printer["output_pin sound"].value|int == 1 %}
        {% for _ in range(count) %}
            SET_PIN PIN=beeper VALUE=1
            G4 P{length}
            SET_PIN PIN=beeper VALUE=0
            G4 P{length}
        {% endfor %}
    {% endif %}

[delayed_gcode KINEMATIC_POSITION]
initial_duration:0.2
gcode:
    SET_KINEMATIC_POSITION X=150
    SET_KINEMATIC_POSITION Y=150
    SET_KINEMATIC_POSITION Z=150
    SET_FILAMENT_SENSOR SENSOR=fila ENABLE=0

[gcode_macro SHAPER_CALIBRATE]
rename_existing: RESHAPER_CALIBRATE
gcode:
    RESHAPER_CALIBRATE FREQ_START=30 FREQ_END=150
    SAVE_CONFIG

## ===========================================================================
# G macros
##

[gcode_macro G29]
variable_k:1
gcode:
    {% if k|int==1 %}
        BED_MESH_CLEAR      #清除调平数据/Clear the leveling data
        # G28
        BED_MESH_CALIBRATE PROFILE=kamp  #自动调平/Auto-leveling 
    {% endif %}

[gcode_macro G30]
gcode:
    BED_MESH_CLEAR      #清除调平数据/Clear the leveling data
    # G28
    BED_MESH_CALIBRATE mesh_min=10,10  mesh_max=170,170  METHOD=manual #手动动调平/Auto-leveling 

[gcode_macro G31]
gcode:
    SET_GCODE_VARIABLE MACRO=G29 VARIABLE=k VALUE=1

[gcode_macro G32]
gcode:
    SET_GCODE_VARIABLE MACRO=G29 VARIABLE=k VALUE=0

## ===========================================================================
# M macros 0-99
##

[gcode_macro M0]
gcode:
    PAUSE

[gcode_macro M25]
rename_existing: M25.1
gcode:
    PAUSE

[gcode_macro M84]
rename_existing:M84.1
gcode:
    SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
    SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
    SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
    SET_STEPPER_ENABLE STEPPER=extruder enable=0
    SET_KINEMATIC_POSITION

## ===========================================================================
# M macros 100-199
##

[gcode_macro M141]
Description: Set chamber heater temperature
# Parameters
#   Snnn Active/Target temperature
gcode:
    {% set temp = params.S | default(0) %}
    {% if printer['heater chamber'] is defined %}
        SET_HEATER_TEMPERATURE HEATER=chamber TARGET={temp}
    {% endif %}

[gcode_macro M106]
# Set fan speeds
# Parameters
#   Pn  Fan numbers used by Orca Slicer
#       P0 Part fan
#       P2 Aux cooling fan
#       P3 Exhaust fan
#   Snnn Fan speed (0-255)
rename_existing: M106.1
gcode:
    {% set raw_speed = params.S | default(255) | int %}
    {% set speed = (raw_speed / 255) | float %}

    {% set fan = params.P | default(0) | int %}
    {% if fan == 0 %}
        M106.1 S{raw_speed}
    {% elif fan == 2 %}
        SET_FAN_SPEED FAN=aux_part_fan SPEED={speed}
    {% elif fan == 3 %}
        SET_FAN_SPEED FAN=exhaust_fan SPEED={speed}
    {% endif %}

[gcode_macro M107]
# Stop all fans
rename_existing:M107.1
gcode:
    M106 S0
    # Edit fan names here, as needed
    {% set fans = ['aux_part_fan', 'exhaust_fan'] %}

    {% for fan in fans %}
        {% if printer['fan_generic ' + fan] is defined %}
            SET_FAN_SPEED FAN={fan} SPEED=0
        {% endif %}
    {% endfor %}

## ===========================================================================
# M macros 200-299
##

[gcode_macro M204]
rename_existing: M204.1
gcode:
    {% if params.S is defined %}
        {% set s = params.S|float %}
    {% endif %}
    {% if params.P is defined %}
    {% if params.T is defined %}
        {% set s = [params.P|float ,params.T|float] | min %}
    {% endif %}
    {% endif %}

    SET_VELOCITY_LIMIT ACCEL={s}
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={s/2}

[gcode_macro M290]
gcode:
   SET_GCODE_OFFSET Z_ADJUST={params.Z}

## ===========================================================================
# M macros 300-399
##

[gcode_macro M303]
description: PID calibrate
# Parameters
#   Hn  Heater
#       H0 extruder
#       H1 bed
#       H2 chamber
#   Snn Temperature
gcode:
    {% set heater = params.H | default(0) | int %}
    {% set temp = params.S | default(200) | int %}

    {% if heater == 0 %}
        PID_CALIBRATE HEATER=extruder TARGET={temp}
    {% endif %}

    {% if heater == 1 %}
        PID_CALIBRATE HEATER=heater_bed TARGET={temp}
    {% endif %}

    {% if heater == 2 %}
        PID_CALIBRATE HEATER=chamber_heater TARGET={temp}
    {% endif %}

## ===========================================================================
# M macros 400+
##

[gcode_macro M603]
description: filament unload
gcode:
    G92 E0
    G0  E15 F400
    G4  P1000
    G92 E0
    G1  E-80 F800

[gcode_macro M604]
description: filament load
gcode:
    M83
    G1  E80 F400

[gcode_macro M900]
gcode:
    {% if params.K is defined %}
          SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
    {% if params.T is defined %}
       SET_PRESSURE_ADVANCE SMOOTH_TIME={params.T}
    {% endif %}

[gcode_macro M901]
gcode:
#    M104 S140
    G28
    SHAPER_CALIBRATE
    SAVE_CONFIG

[gcode_macro M1029]
gcode:
#    X_TWIST_PROFILE_LOAD NAME=default
#    X_TWIST_COMPENSATE_MESH MESH_NAME=default COMPENSATION_NAME=default
#    SAVE_CONFIG

[gcode_macro M4029]
gcode:
    BED_MESH_CLEAR
    G91
    G1 Z10 F600
    G90
    G28
    G1 X{printer.toolhead.axis_maximum.x/2 - printer.probe["x_offset"]} Y{printer.toolhead.axis_maximum.y/2 - printer.probe["y_offset"]} F7800
    G1 Z15 F600
    ABORT
    PROBE_CALIBRATE
    ABORT
    G0 Z0
#    TESTZ Z=-3.0

[gcode_macro M8029]
gcode:
     {% if params.D is defined %}
       {% if (params.D|int)==1 %}
        SET_FILAMENT_SENSOR SENSOR=fila  ENABLE=1
       {% endif %}
       {% if (params.D|int)==0 %}
        SET_FILAMENT_SENSOR SENSOR=fila  ENABLE=0
       {% endif %}
     {% endif %}
